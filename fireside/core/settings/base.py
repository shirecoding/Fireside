"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 4.0.5.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

from pathlib import Path

import environ
from colorlog import ColoredFormatter

env = environ.Env(DEBUG=(bool, False))

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent.parent

# Take environment variables from .env file
if Path(BASE_DIR / ".env").exists():
    environ.Env.read_env(BASE_DIR / ".env")

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env("SECRET_KEY")

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    "daphne",  # https://channels.readthedocs.io/
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    # 3rd party
    "channels",  # https://channels.readthedocs.io/
    "guardian",  # https://django-guardian.readthedocs.io/
    "django_extensions",  # https://django-extensions.readthedocs.io/
    "django_rq",  # https://github.com/rq/django-rq
    # ours
    "fireside.apps.FiresideConfig",
    "chat.apps.ChatConfig",
]

AUTHENTICATION_BACKENDS = [
    "django.contrib.auth.backends.ModelBackend",  # default
    "guardian.backends.ObjectPermissionBackend",  # django-guardian
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "core.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / "templates"],  # override admin template
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "core.wsgi.application"
ASGI_APPLICATION = "core.asgi.application"

# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/
STATIC_ROOT = BASE_DIR / "static"
STATIC_URL = "/static/"

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"


# Logging
LOGGING = {
    "version": 1,
    "disable_existing_loggers": True,
    "formatters": {
        "detailed_string": {
            "format": "%(asctime)-15s [%(name)s] %(levelname)s: %(message)s",
            "datefmt": "%Y-%m-%dT%H:%M:%SZ",
        },
        "colored_formatter": {
            "()": ColoredFormatter,
            "format": "%(asctime)-15s [%(cyan)s%(name)s%(reset)s] %(log_color)s%(levelname)s%(reset)s: %(message)s",
            "datefmt": "%Y-%m-%dT%H:%M:%SZ",
            "log_colors": {
                "DEBUG": "white",
                "INFO": "green",
                "WARNING": "yellow",
                "ERROR": "bold_red",
                "CRITICAL": "bold_red",
            },
        },
    },
    "handlers": {
        "console": {
            "class": "logging.StreamHandler",
            "formatter": "colored_formatter",
            "level": "DEBUG",
        }
    },
    "loggers": {
        "core": {
            "level": "DEBUG",
            "handlers": ["console"],
        },
        "fireside": {
            "level": "DEBUG",
            "handlers": ["console"],
        },
        "chat": {
            "level": "DEBUG",
            "handlers": ["console"],
        },
        "rq.worker": {"handlers": ["console"], "level": "DEBUG"},
    },
}

# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases
DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": "postgres",
        "USER": "postgres",
        "PASSWORD": env("DB_PASSWORD"),
        "HOST": env("DB_HOST"),
        "PORT": env("DB_PORT"),
    }
}

# Cache
CACHE_PASSWORD = env("CACHE_PASSWORD")
CACHE_HOST = env("CACHE_HOST")
CACHE_PORT = env("CACHE_PORT")
CACHES = {
    "default": {
        "BACKEND": "django.core.cache.backends.redis.RedisCache",
        "LOCATION": f"redis://:{CACHE_PASSWORD}@{CACHE_HOST}:{CACHE_PORT}",
    }
}

# Channels
CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels_redis.core.RedisChannelLayer",
        "CONFIG": {
            "hosts": [(f"redis://:{CACHE_PASSWORD}@{CACHE_HOST}:{CACHE_PORT}")],
        },
    },
}


# RQ
RQ_QUEUES = {
    "high": {
        "HOST": CACHE_HOST,
        "PORT": CACHE_PORT,
        "DB": 0,
        "PASSWORD": CACHE_PASSWORD,
        "DEFAULT_TIMEOUT": 360,
    },
    "default": {
        "HOST": CACHE_HOST,
        "PORT": CACHE_PORT,
        "DB": 0,
        "PASSWORD": CACHE_PASSWORD,
        "DEFAULT_TIMEOUT": 360,
    },
    "low": {
        "HOST": CACHE_HOST,
        "PORT": CACHE_PORT,
        "DB": 0,
        "PASSWORD": CACHE_PASSWORD,
        "DEFAULT_TIMEOUT": 360,
    },
}
