# Generated by Django 4.0.5 on 2022-12-17 10:14

import uuid

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Task",
            fields=[
                (
                    "uid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=128, unique=True)),
                ("description", models.TextField(default="", max_length=256)),
                (
                    "fpath",
                    models.CharField(
                        help_text="Path to the function to be run (eg. path.to.function)",
                        max_length=256,
                        unique=True,
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("default", "Default"),
                            ("high", "High"),
                        ],
                        default="default",
                        help_text="Priority of the task",
                        max_length=128,
                    ),
                ),
                (
                    "timeout",
                    models.IntegerField(
                        blank=True,
                        help_text="Timeout of the task in seconds (leave empty to use the default timeout)",
                        null=True,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="TaskPreset",
            fields=[
                (
                    "uid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "activate_on",
                    models.DateTimeField(
                        blank=True,
                        help_text="When the model is considered activated (If None, model is considered activate as long as `now` < `deactivate_on`)",
                        null=True,
                    ),
                ),
                (
                    "deactivate_on",
                    models.DateTimeField(
                        blank=True,
                        help_text="When the model is considered deactivated.",
                        null=True,
                    ),
                ),
                ("name", models.CharField(max_length=128, unique=True)),
                ("description", models.TextField(default="", max_length=256)),
                (
                    "event",
                    models.JSONField(
                        blank=True, default=dict, help_text="Preset event for the task"
                    ),
                ),
                (
                    "task",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="fireside.task"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="TaskSchedule",
            fields=[
                (
                    "uid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "activate_on",
                    models.DateTimeField(
                        blank=True,
                        help_text="When the model is considered activated (If None, model is considered activate as long as `now` < `deactivate_on`)",
                        null=True,
                    ),
                ),
                (
                    "deactivate_on",
                    models.DateTimeField(
                        blank=True,
                        help_text="When the model is considered deactivated.",
                        null=True,
                    ),
                ),
                (
                    "cron",
                    models.CharField(
                        blank=True,
                        help_text="A cron string (e.g. '0 0 * * 0')",
                        max_length=128,
                        null=True,
                    ),
                ),
                (
                    "repeat",
                    models.IntegerField(
                        blank=True,
                        help_text="Repeat this number of times (None means repeat forever)",
                        null=True,
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("default", "Default"),
                            ("high", "High"),
                        ],
                        default="default",
                        help_text="Priority of the task (overrides priority set in task)",
                        max_length=128,
                    ),
                ),
                (
                    "timeout",
                    models.IntegerField(
                        blank=True,
                        help_text="Timeout of the task in seconds (leave empty to use the default timeout, overrides priority set in task)",
                        null=True,
                    ),
                ),
                (
                    "task_preset",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="fireside.taskpreset",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
